Assignment on Aggregation  , limit and skip
Parag Joshi
•
2:45 PM
100 points
1. Give per share the average closing price, the minimum closing price, the maximum closing price and the average number of shares traded per day.

ustdb> db.bel20.aggregate([
...     {
...         $group: {
...             _id: "$name",
...             avg_closing_price: { $avg: "$price.end" },
...             min_closing_price: { $min: "$price.end" },
...             max_closing_price: { $max: "$price.end" },
...             avg_shares_traded: { $avg: "$number" }
...         }
...     }
... ])


output:
[
  {
    _id: 'KBC',
    avg_closing_price: 39.934705882352944,
    min_closing_price: 39.1,
    max_closing_price: 40.74,
    avg_shares_traded: 1236588.2352941176
  },
  {
    _id: 'Elia',
    avg_closing_price: 33.66882352941177,
    min_closing_price: 33.38,
    max_closing_price: 34.15,
    avg_shares_traded: 25094.117647058825
  }
]

2.)))) Give per share the minimum closing price and the week in which this minimum closing price occurred. E.g.
//KBC: minprice = 39.1 ; week = 44
//Elia: minprice = 33.38 ; week = 46


ustdb> db.bel20.aggregate([
...     {
...         $addFields: {
...             week: { $isoWeek: "$date" }
...         }
...     },
...     {
...         $group: {
...             _id: "$name",
...             min_price: { $min: "$price.end" },
...             min_price_week: { $first: "$week" }
...         }
...     }
... ])


Output::::
[
  { _id: 'KBC', min_price: 39.1, min_price_week: 48 },
  { _id: 'Elia', min_price: 33.38, min_price_week: 48 }
]


3.))) Specify the number of cheeses per cheesetype. Put the cheesetype in capital letters.

ustdb> db.cheeses.aggregate([
...     {
...         $group: {
...             _id: { $toUpper: "$properties.cheesetype" },
...             cheese_count: { $sum: 1 }
...         }
...     }
... ])


output::::;
[
  { _id: 'HARD CHEESE', cheese_count: 2 },
  { _id: 'ABBEYCHEESE', cheese_count: 3 }
]
4. Give the number of cheeses per cheese factory with at least 2 variants.

ustdb> db.cheeses.aggregate([
...     {
...         $group: {
...             _id: "$factory",
...             unique_cheese_types: { $addToSet: "$properties.cheesetype" },
...             cheese_count: { $sum: 1 }
...         }
...     },
...     {
...         $match: {
...             cheese_count: { $gte: 2 }
...         }
...     }
... ])


output:::::
[
  {
    _id: 'Belgomilk',
    unique_cheese_types: [ 'hard cheese' ],
    cheese_count: 2
  },
  {
    _id: 'Lindenhof',
    unique_cheese_types: [ 'abbeycheese' ],
    cheese_count: 3
  }
]

5. normalize usernames: in upper case and in alphabetical order

ustdb> db.users.aggregate([
...     {
...         $project: {
...             normalized_username: { $toUpper: "$_id" }
...         }
...     },
...     {
...         $sort: { normalized_username: 1 }
...     }
... ])


output:::::

[
  { _id: 'harold', normalized_username: 'HAROLD' },
  { _id: 'jane', normalized_username: 'JANE' },
  { _id: 'jill', normalized_username: 'JILL' },
  { _id: 'joe', normalized_username: 'JOE' },
  { _id: 'kate', normalized_username: 'KATE' },
  { _id: 'ruth', normalized_username: 'RUTH' }
]

6. Return the Five Most Common “Likes”

ustdb> db.users.aggregate([
...     { $unwind: "$likes" },
...     {
...         $group: {
...             _id: "$likes",
...             like_count: { $sum: 1 }
...         }
...     },
...     {
...         $sort: { like_count: -1 }
...     },
...     { $limit: 5 }
... ])



output::::

[
  { _id: 'golf', like_count: 5 },
  { _id: 'racquetball', like_count: 3 },
  { _id: 'tennis', like_count: 3 },
  { _id: 'darts', like_count: 2 },
  { _id: 'swimming', like_count: 1 }
]

7. Return States with Populations above 10 Million

db.city.aggregate([
    {
        $group: {
            _id: "$state",
            total_population: { $sum: "$pop" }
        }
    },
    {
        $match: {
            total_population: { $gt: 10000000 }
        }
    }
])

8. Return Average City Population by State

db.city.aggregate([
    {
        $group: {
            _id: "$state",
            avg_population: { $avg: "$pop" }
        }
    }
])



9. Return Largest and Smallest Cities by State (name and population)

db.city.aggregate([
    {
        $group: {
            _id: "$state",
            largest_city: { $max: "$pop" },
            smallest_city: { $min: "$pop" }
        }
    }
])



10. Return the top 5 states with the most number of cities

db.cities.aggregate([
    {
        $group: {
            _id: "$state",
            city_count: { $sum: 1 }
        }
    },
    {
        $sort: { city_count: -1 }
    },
    { $limit: 5 }
])

11.))) fetch the result by sorting on "education" column in ascending order

ustdb> db.userdetails.find().sort({ education: 1 })


output:::
[
  {
    _id: ObjectId('528cabb5e1e41035b889f2c0'),
    user_id: 'user2',
    password: '11aa1a',
    date_of_join: '17/10/2009',
    education: 'M.B.A.',
    profession: 'MARKETING',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Roy', 'MR. Das', 'MR Doglus' ],
    community_members: [ 500, 300, 1400 ],
    friends_id: [ 'pal', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  },
  {
    _id: ObjectId('528cabece1e41035b889f2c2'),
    user_id: 'user4',
    password: 'abczyx',
    date_of_join: '17/8/2009',
    education: 'M.B.B.S.',
    profession: 'DOCTOR',
    interest: 'SPORTS',
    community_name: [ 'ATHELATIC', 'GAMES FAN GYES', 'FAVOURIT GAMES' ],
    community_moder_id: [ 'MR. Paul', 'MR. Das', 'MR Doglus' ],
    community_members: [ 2500, 2200, 3500 ],
    friends_id: [ 'vinod', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  },
  {
    _id: ObjectId('528cab88e1e41035b889f2bf'),
    user_id: 'user1',
    password: '1a2b3c',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'CONSULTANT',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Alex', 'MR. Dang', 'MR Haris' ],
    community_members: [ 700, 200, 1500 ],
    friends_id: [ 'kumar', 'harry', 'anand' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  },
  {
    _id: ObjectId('528cabd0e1e41035b889f2c1'),
    user_id: 'user3',
    password: 'b1c1d1',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'IT COR.',
    interest: 'ART',
    community_name: [ 'MODERN ART', 'CLASSICAL ART', 'WESTERN ART' ],
    community_moder_id: [ 'MR. Rifel', 'MR. Sarma', 'MR Bhatia' ],
    community_members: [ 5000, 2000, 1500 ],
    friends_id: [ 'philip', 'anant', 'alan' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  }
]

12. fetch the result by sorting on "education" column in descending order

ustdb> db.userdetails.find().sort({ education: -1 })


output::::
[
  {
    _id: ObjectId('528cab88e1e41035b889f2bf'),
    user_id: 'user1',
    password: '1a2b3c',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'CONSULTANT',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Alex', 'MR. Dang', 'MR Haris' ],
    community_members: [ 700, 200, 1500 ],
    friends_id: [ 'kumar', 'harry', 'anand' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  },
  {
    _id: ObjectId('528cabd0e1e41035b889f2c1'),
    user_id: 'user3',
    password: 'b1c1d1',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'IT COR.',
    interest: 'ART',
    community_name: [ 'MODERN ART', 'CLASSICAL ART', 'WESTERN ART' ],
    community_moder_id: [ 'MR. Rifel', 'MR. Sarma', 'MR Bhatia' ],
    community_members: [ 5000, 2000, 1500 ],
    friends_id: [ 'philip', 'anant', 'alan' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  },
  {
    _id: ObjectId('528cabece1e41035b889f2c2'),
    user_id: 'user4',
    password: 'abczyx',
    date_of_join: '17/8/2009',
    education: 'M.B.B.S.',
    profession: 'DOCTOR',
    interest: 'SPORTS',
    community_name: [ 'ATHELATIC', 'GAMES FAN GYES', 'FAVOURIT GAMES' ],
    community_moder_id: [ 'MR. Paul', 'MR. Das', 'MR Doglus' ],
    community_members: [ 2500, 2200, 3500 ],
    friends_id: [ 'vinod', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  },
  {
    _id: ObjectId('528cabb5e1e41035b889f2c0'),
    user_id: 'user2',
    password: '11aa1a',
    date_of_join: '17/10/2009',
    education: 'M.B.A.',
    profession: 'MARKETING',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Roy', 'MR. Das', 'MR Doglus' ],
    community_members: [ 500, 300, 1400 ],
    friends_id: [ 'pal', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  }
]

13. fetch the result by sorting on "education" column in ascending order and "password" column in descending order

ustdb> db.userdetails.find().sort({ education: 1, password: -1 })


output::::
[
  {
    _id: ObjectId('528cabb5e1e41035b889f2c0'),
    user_id: 'user2',
    password: '11aa1a',
    date_of_join: '17/10/2009',
    education: 'M.B.A.',
    profession: 'MARKETING',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Roy', 'MR. Das', 'MR Doglus' ],
    community_members: [ 500, 300, 1400 ],
    friends_id: [ 'pal', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  },
  {
    _id: ObjectId('528cabece1e41035b889f2c2'),
    user_id: 'user4',
    password: 'abczyx',
    date_of_join: '17/8/2009',
    education: 'M.B.B.S.',
    profession: 'DOCTOR',
    interest: 'SPORTS',
    community_name: [ 'ATHELATIC', 'GAMES FAN GYES', 'FAVOURIT GAMES' ],
    community_moder_id: [ 'MR. Paul', 'MR. Das', 'MR Doglus' ],
    community_members: [ 2500, 2200, 3500 ],
    friends_id: [ 'vinod', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  },
  {
    _id: ObjectId('528cabd0e1e41035b889f2c1'),
    user_id: 'user3',
    password: 'b1c1d1',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'IT COR.',
    interest: 'ART',
    community_name: [ 'MODERN ART', 'CLASSICAL ART', 'WESTERN ART' ],
    community_moder_id: [ 'MR. Rifel', 'MR. Sarma', 'MR Bhatia' ],
    community_members: [ 5000, 2000, 1500 ],
    friends_id: [ 'philip', 'anant', 'alan' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  },
  {
    _id: ObjectId('528cab88e1e41035b889f2bf'),
    user_id: 'user1',
    password: '1a2b3c',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'CONSULTANT',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Alex', 'MR. Dang', 'MR Haris' ],
    community_members: [ 700, 200, 1500 ],
    friends_id: [ 'kumar', 'harry', 'anand' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  }
]

14. fetch first two documents from the collection "userdetails"

ustdb> db.userdetails.find().limit(2)


output:::
[
  {
    _id: ObjectId('528cab88e1e41035b889f2bf'),
    user_id: 'user1',
    password: '1a2b3c',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'CONSULTANT',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Alex', 'MR. Dang', 'MR Haris' ],
    community_members: [ 700, 200, 1500 ],
    friends_id: [ 'kumar', 'harry', 'anand' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  },
  {
    _id: ObjectId('528cabb5e1e41035b889f2c0'),
    user_id: 'user2',
    password: '11aa1a',
    date_of_join: '17/10/2009',
    education: 'M.B.A.',
    profession: 'MARKETING',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Roy', 'MR. Das', 'MR Doglus' ],
    community_members: [ 500, 300, 1400 ],
    friends_id: [ 'pal', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  }
]

15. fetch two documents after the first two documents from the collection 'userdetails'

ustdb> db.userdetails.find().skip(2).limit(2)

output:::
[
  {
    _id: ObjectId('528cabd0e1e41035b889f2c1'),
    user_id: 'user3',
    password: 'b1c1d1',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'IT COR.',
    interest: 'ART',
    community_name: [ 'MODERN ART', 'CLASSICAL ART', 'WESTERN ART' ],
    community_moder_id: [ 'MR. Rifel', 'MR. Sarma', 'MR Bhatia' ],
    community_members: [ 5000, 2000, 1500 ],
    friends_id: [ 'philip', 'anant', 'alan' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  },
  {
    _id: ObjectId('528cabece1e41035b889f2c2'),
    user_id: 'user4',
    password: 'abczyx',
    date_of_join: '17/8/2009',
    education: 'M.B.B.S.',
    profession: 'DOCTOR',
    interest: 'SPORTS',
    community_name: [ 'ATHELATIC', 'GAMES FAN GYES', 'FAVOURIT GAMES' ],
    community_moder_id: [ 'MR. Paul', 'MR. Das', 'MR Doglus' ],
    community_members: [ 2500, 2200, 3500 ],
    friends_id: [ 'vinod', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  }
]

16. fetch the two documents after the first document from the collection 'userdetails'

ustdb> db.userdetails.find().skip(1).limit(2)


output::::

[
  {
    _id: ObjectId('528cabb5e1e41035b889f2c0'),
    user_id: 'user2',
    password: '11aa1a',
    date_of_join: '17/10/2009',
    education: 'M.B.A.',
    profession: 'MARKETING',
    interest: 'MUSIC',
    community_name: [ 'MODERN MUSIC', 'CLASSICAL MUSIC', 'WESTERN MUSIC' ],
    community_moder_id: [ 'MR. Roy', 'MR. Das', 'MR Doglus' ],
    community_members: [ 500, 300, 1400 ],
    friends_id: [ 'pal', 'viki', 'john' ],
    ban_friends_id: [ 'jalan', 'monoj', 'evan' ]
  },
  {
    _id: ObjectId('528cabd0e1e41035b889f2c1'),
    user_id: 'user3',
    password: 'b1c1d1',
    date_of_join: '16/10/2010',
    education: 'M.C.A.',
    profession: 'IT COR.',
    interest: 'ART',
    community_name: [ 'MODERN ART', 'CLASSICAL ART', 'WESTERN ART' ],
    community_moder_id: [ 'MR. Rifel', 'MR. Sarma', 'MR Bhatia' ],
    community_members: [ 5000, 2000, 1500 ],
    friends_id: [ 'philip', 'anant', 'alan' ],
    ban_friends_id: [ 'Amir', 'Raja', 'mont' ]
  }
]